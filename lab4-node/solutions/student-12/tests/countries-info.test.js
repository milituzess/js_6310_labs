import { countriesInfo } from '../src/data/countries-info.js';
import { describe, test, expect } from '@jest/globals';

describe('Countries data', () => {
  // –¢–µ—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  test('all countries have required info sections', () => {
    Object.values(countriesInfo).forEach(country => {
      expect(country).toHaveProperty('visa');
      expect(country).toHaveProperty('climate');
      expect(country).toHaveProperty('currency');
      expect(country).toHaveProperty('language');
      expect(country).toHaveProperty('culture');
    });
  });

  // –¢–µ—Å—Ç —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
  test('all info sections have correct data types', () => {
    Object.values(countriesInfo).forEach(country => {
      expect(typeof country.visa).toBe('string');
      expect(typeof country.climate).toBe('string');
      expect(typeof country.currency).toBe('string');
      expect(typeof country.language).toBe('string');
      expect(typeof country.culture).toBe('string');
    });
  });

  // –¢–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–µ)
  test('all info sections contain meaningful content', () => {
    Object.values(countriesInfo).forEach(country => {
      expect(country.visa.length).toBeGreaterThan(20);
      expect(country.climate.length).toBeGreaterThan(20);
      expect(country.currency.length).toBeGreaterThan(20);
      expect(country.language.length).toBeGreaterThan(20);
      expect(country.culture.length).toBeGreaterThan(20);
    });
  });

  // –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ HTML –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–≥–æ–≤)
  test('info sections contain valid HTML formatting', () => {
    Object.values(countriesInfo).forEach(country => {
      expect(country.visa).toMatch(/<b>.*<\/b>/);
      expect(country.climate).toMatch(/<b>.*<\/b>/);
      expect(country.currency).toMatch(/<b>.*<\/b>/);
      expect(country.language).toMatch(/<b>.*<\/b>/);
      expect(country.culture).toMatch(/<b>.*<\/b>/);
    });
  });

  // –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–ø–∏—Å–∫–æ–≤ (–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤)
  test('info sections have proper list formatting', () => {
    Object.values(countriesInfo).forEach(country => {
      expect(country.visa).toMatch(/‚Ä¢/);
      expect(country.climate).toMatch(/‚Ä¢/);
      expect(country.currency).toMatch(/‚Ä¢/);
      expect(country.language).toMatch(/‚Ä¢/);
      expect(country.culture).toMatch(/‚Ä¢/);
    });
  });

  // –¢–µ—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω
  test('all country names are unique', () => {
    const countryNames = Object.keys(countriesInfo);
    const uniqueNames = [...new Set(countryNames)];
    expect(countryNames.length).toBe(uniqueNames.length);
  });

  // –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω (—ç–º–æ–¥–∑–∏ + —Ç–µ–∫—Å—Ç)
  test('country names have proper format with emoji', () => {
    Object.keys(countriesInfo).forEach(countryName => {
      expect(countryName).toMatch(/üáπüá∑|üá™üá¨|üáÆüáπ|üá™üá∏|üá¨üá∑/); // —Ñ–ª–∞–≥–∏
      expect(countryName).toMatch(/[–ê-–Ø–∞-—è]/); // –∫–∏—Ä–∏–ª–ª–∏—Ü–∞
      expect(countryName.length).toBeGreaterThan(5);
    });
  });

  // –¢–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –∫–∞–∂–¥–æ–º —Ä–∞–∑–¥–µ–ª–µ)
  test('specific sections contain relevant keywords', () => {
    Object.entries(countriesInfo).forEach(([, country]) => {
      // –í–∏–∑–∞
      expect(country.visa.toLowerCase()).toMatch(/–≤–∏–∑–∞|–ø–∞—Å–ø–æ—Ä—Ç|–≥—Ä–∞–∂–¥–∞–Ω|—Å—Ä–æ–∫/);
      
      // –ö–ª–∏–º–∞—Ç
      expect(country.climate.toLowerCase()).toMatch(/–∫–ª–∏–º–∞—Ç|—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä|–≥—Ä–∞–¥—É—Å|–ø–æ–≥–æ–¥/);
      
      // –í–∞–ª—é—Ç–∞
      expect(country.currency.toLowerCase()).toMatch(/–≤–∞–ª—é—Ç–∞|–∫–∞—Ä—Ç|–Ω–∞–ª|–¥–µ–Ω—å–≥/);
      
      // –Ø–∑—ã–∫
      expect(country.language.toLowerCase()).toMatch(/—è–∑—ã–∫|—Ä–∞–∑–≥–æ–≤–æ—Ä|—Ñ—Ä–∞–∑|–æ—Ñ–∏—Ü–∏–∞–ª/);
      
      // –ö—É–ª—å—Ç—É—Ä–∞
      expect(country.culture.toLowerCase()).toMatch(/–∫—É–ª—å—Ç—É—Ä|—Ç—Ä–∞–¥–∏—Ü|–æ–±—ã—á–∞|—á–∞–µ–≤/);
    });
  });

  // –¢–µ—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–Ω–µ—Ç –ø—É—Å—Ç—ã—Ö –∏–ª–∏ placeholder-–¥–∞–Ω–Ω—ã—Ö)
  test('no empty or placeholder data', () => {
    Object.values(countriesInfo).forEach(country => {
      const sections = [country.visa, country.climate, country.currency, country.language, country.culture];
      sections.forEach(section => {
        expect(section).not.toMatch(/TODO|–í–°–¢–ê–í–¨–¢–ï|–û–ü–ò–°–ê–ù–ò–ï|xxx/i);
        expect(section.trim()).not.toBe('');
      });
    });
  });

  // –¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∞ (–µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
  test('consistent formatting across all countries', () => {
    Object.values(countriesInfo).forEach(country => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      const sections = [country.visa, country.climate, country.currency, country.language, country.culture];
      sections.forEach(section => {
        // –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –ø—É–Ω–∫—Ç–∞–º–∏
        expect(section).toMatch(/\n‚Ä¢/);
        // –î–æ–ª–∂–Ω—ã –±—ã—Ç—å HTML —Ç–µ–≥–∏ –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        expect(section).toMatch(/<b>/);
      });
    });
  });
});
